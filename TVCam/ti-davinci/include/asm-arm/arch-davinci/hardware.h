/*
 * Common hardware definitions
 *
 * Author: Kevin Hilman, MontaVista Software, Inc.
 * Copyright (c) 2007-2009 MontaVista Software, Inc. <source@mvista.com>
 *
 * This file is licensed under the terms of the GNU General Public License
 * version 2. This program is licensed "as is" without any warranty of any
 * kind, whether express or implied.
 */
#ifndef __ASM_ARCH_HARDWARE_H
#define __ASM_ARCH_HARDWARE_H

#include <asm/arch/psc.h>
#include <asm/arch/serial.h>

/*
 * Base register addresses
 */
#define DAVINCI_DMA_3PCC_BASE			(0x01C00000)
#define DAVINCI_DMA_3PTC0_BASE			(0x01C10000)
#define DAVINCI_DMA_3PTC1_BASE			(0x01C10400)
#define DAVINCI_I2C_BASE			(0x01C21000)
#define DAVINCI_TIMER0_BASE			(0x01C21400)
#define DAVINCI_TIMER1_BASE			(0x01C21800)
#define DAVINCI_WDOG_BASE			(0x01C21C00)
#define DAVINCI_PWM0_BASE			(0x01C22000)
#define DAVINCI_PWM1_BASE			(0x01C22400)
#define DAVINCI_PWM2_BASE			(0x01C22800)
#define DAVINCI_SYSTEM_MODULE_BASE		(0x01C40000)
#define DAVINCI_PLL_CNTRL0_BASE			(0x01C40800)
#define DAVINCI_PLL_CNTRL1_BASE			(0x01C40C00)
#define DAVINCI_PWR_SLEEP_CNTRL_BASE		(0x01C41000)
#define DAVINCI_SYSTEM_DFT_BASE			(0x01C42000)
#define DAVINCI_IEEE1394_BASE			(0x01C60000)
#define DAVINCI_USB_OTG_BASE			(0x01C64000)
#define DAVINCI_CFC_ATA_BASE			(0x01C66000)
#define DAVINCI_SPI_BASE			(0x01C66800)
#define DAVINCI_GPIO_BASE			(0x01C67000)
#define DAVINCI_UHPI_BASE			(0x01C67800)
#define DAVINCI_VPSS_REGS_BASE			(0x01C70000)
#define DAVINCI_EMAC_CNTRL_REGS_BASE		(0x01C80000)
#define DAVINCI_EMAC_WRAPPER_CNTRL_REGS_BASE	(0x01C81000)
#define DAVINCI_EMAC_WRAPPER_RAM_BASE		(0x01C82000)
#define DAVINCI_MDIO_CNTRL_REGS_BASE		(0x01C84000)
#define DAVINCI_IMCOP_BASE			(0x01CC0000)
#define DAVINCI_ASYNC_EMIF_CNTRL_BASE		(0x01E00000)
#define DAVINCI_VLYNQ_BASE			(0x01E01000)
#define DAVINCI_MCBSP_BASE			(0x01E02000)
#define DAVINCI_MMC_SD_BASE			(0x01E10000)
#define DAVINCI_MS_BASE				(0x01E20000)
#define DAVINCI_ASYNC_EMIF_DATA_CE0_BASE	(0x02000000)
#define DAVINCI_ASYNC_EMIF_DATA_CE1_BASE	(0x04000000)
#define DAVINCI_ASYNC_EMIF_DATA_CE2_BASE	(0x06000000)
#define DAVINCI_ASYNC_EMIF_DATA_CE3_BASE	(0x08000000)
#define DAVINCI_VLYNQ_REMOTE_BASE		(0x0C000000)

#define DM644X_UART2_BASE			(0x01C20800)
#define DM644X_ASYNC_EMIF_CNTRL_BASE		(0x01E00000)
#define DM644X_DDR2_CNTL_BASE			(0x20000000)

/*
 * We can have multiple VLYNQ IPs in our system.
 * Define 'LOW_VLYNQ_CONTROL_BASE' with the VLYNQ
 * IP having lowest base address.
 * Define 'HIGH_VLYNQ_CONTROL_BASE' with the VLYNQ
 * IP having highest base address.
 * In case of only one VLYNQ IP, define only the
 * 'LOW_VLYNQ_CONTROL_BASE'.
 */
#define LOW_VLYNQ_CONTROL_BASE			DAVINCI_VLYNQ_BASE

/*
 * DM6467 base register addresses different from original DaVinci
 */
#define DAVINCI_DM646X_DMA_3PTC2_BASE             (0x01C10800)
#define DAVINCI_DM646X_DMA_3PTC3_BASE             (0x01C10C00)
#define DAVINCI_DM646X_VIDEO_PORT_BASE            (0x01C12000)
#define DAVINCI_DM646X_VDCE_BASE                  (0x01C12800)
#define DAVINCI_DM646X_TSIF0_BASE                 (0x01C13000)
#define DAVINCI_DM646X_TSIF1_BASE                 (0x01C13400)
#define DAVINCI_DM646X_PCI_CTL_BASE               (0x01C1A000)
#define DAVINCI_DM646X_CRGEN0_BASE                (0x01C26000)
#define DAVINCI_DM646X_CRGEN1_BASE                (0x01C26400)
#define DAVINCI_DM646X_SEC_CONTROLLER_BASE        (0x01C40400)
#define DAVINCI_DM646X_MCASP0_REG_BASE            (0x01D01000)
#define DAVINCI_DM646X_MCASP0_DATA_PORT_BASE      (0x01D01400)
#define DAVINCI_DM646X_MCASP1_REG_BASE            (0x01D01800)
#define DAVINCI_DM646X_MCASP1_DATA_PORT_BASE      (0x01D01C00)
#define DAVINCI_DM646X_HDVICP0_BASE               (0x02000000)
#define DAVINCI_DM646X_HDVICP1_BASE               (0x02200000)
#define DAVINCI_DM646X_ASYNC_EMIF_CNTRL_BASE      (0x20008000)
#define DAVINCI_DM646X_VLYNQ_BASE                 (0x20010000)
#define DAVINCI_DM646X_ASYNC_EMIF_DATA_CE0_BASE   (0x42000000)
#define DAVINCI_DM646X_ASYNC_EMIF_DATA_CE1_BASE   (0x44000000)
#define DAVINCI_DM646X_ASYNC_EMIF_DATA_CE2_BASE   (0x46000000)
#define DAVINCI_DM646X_ASYNC_EMIF_DATA_CE3_BASE   (0x48000000)
#define DAVINCI_DM646X_VLYNQ_REMOTE_BASE          (0x4C000000)

/*
 * Macro to access device power control
 */
#define DAVINCI_VDD3P3V_PWDN            (DAVINCI_SYSTEM_MODULE_BASE + 0x48)
#define DAVINCI_VSCLKDIS                (DAVINCI_SYSTEM_MODULE_BASE + 0x6c)

/*
 * System module registers
 */
#define PINMUX0		(DAVINCI_SYSTEM_MODULE_BASE + 0x00)
#define PINMUX1		(DAVINCI_SYSTEM_MODULE_BASE + 0x04)
#define PINMUX2		(DAVINCI_SYSTEM_MODULE_BASE + 0x08)
#define PINMUX3		(DAVINCI_SYSTEM_MODULE_BASE + 0x0c)
#define PINMUX4		(DAVINCI_SYSTEM_MODULE_BASE + 0x10)

#define DM365_ARM_INTMUX	(DAVINCI_SYSTEM_MODULE_BASE + 0x18)
#define DM365_EDMA_EVTMUX	(DAVINCI_SYSTEM_MODULE_BASE + 0x1C)
#define DAVINCI_PUPDCTL1	(DAVINCI_SYSTEM_MODULE_BASE + 0x7C)

/*
 * DA8xx boot configuration registers
 */
#define DA8XX_KICK0		(DA8XX_BOOT_CFG_BASE + 0x38)
#define DA8XX_KICK1		(DA8XX_BOOT_CFG_BASE + 0x3c)
/* DA8xx has 20 PINMUX registers */
#define DA8XX_PINMUX(n) 	(DA8XX_BOOT_CFG_BASE + 0x120 + (n) * 4)
/* DA8xx has 5 CFGCHIP registers */
#define DA8XX_CFGCHIP(n)	(DA8XX_BOOT_CFG_BASE + 0x17c + (n) * 4)

#define DA8XX_KICK0_MAGIC	0x83e70b13
#define DA8XX_KICK1_MAGIC	0x95a4f1e0

/* DA8xx cfg regs have to be unlocked by writing magic values to kick regs.
 * Unlocking these registers is done early in the boot process.
 */
#define davinci_cfg_readl(a)		davinci_readl(a)
#define davinci_cfg_writel(v, a)	davinci_writel(v, a)

#define ASYNC_EMIF_REVID	0x00
#define ASYNC_EMIF_AWCCR	0x04
#define ASYNC_EMIF_A1CR 	0x10
#define ASYNC_EMIF_A2CR 	0x14
#define ASYNC_EMIF_A3CR 	0x18

/*
 * Base register addresses common across DM355 and DM365
 */
#define DM3XX_TIMER2_BASE		(0x01C20800)
#define DM3XX_REALTIME_BASE		(0x01C20C00)
#define DM3XX_PWM3_BASE			(0x01C22C00)
#define DM3XX_SPI_BASE			(0x01C66000)
#define DM3XX_SPI0_BASE			DM3XX_SPI_BASE
#define DM3XX_SPI1_BASE			(0x01C66800)
#define DM3XX_SPI2_BASE			(0x01C67800)

/*
 * DM355 base register addresses
 */
#define DM355_VPSS_CLK_BASE		DAVINCI_VPSS_REGS_BASE
#define DM355_VPSS_HW3A_BASE		(0x01C70080)
#define DM355_VPSS_IPIPE0_BASE		(0x01C70100)
#define DM355_VPSS_OSD_BASE		(0x01C70200)
#define DM355_VPSS_HSSIF_BASE		(0x01C70300)
#define DM355_VPSS_VENC_BASE		(0x01C70400)
#define DM355_VPSS_CCDC_BASE		(0x01C70600)
#define DM355_VPSS_BL_BASE		(0x01C70800)
#define DM355_VPSS_CFA_LD_BASE		(0x01C70900)
#define DM355_VPSS_IPIPE1_BASE		(0x01C71000)
#define DM355_IMX_BASE			(0x01CD0000)
#define DM355_IMX_CTL_BASE		(0x01CD0380)
#define DM355_IMCOP_CTL_BASE		(0x01CDF400)
#define DM355_IMCOP_SEQ_BASE		(0x01CDFF00)
#define DM355_MMC1_BASE 		(0x01E00000)
#define DM355_MCBSP0_BASE		DAVINCI_MCBSP_BASE
#define DM355_MCBSP1_BASE		(0x01E04000)
#define DM355_MCBSP1_RX_DMA_PORT	DM355_MCBSP1_BASE
#define DM355_MCBSP1_TX_DMA_PORT	(DM355_MCBSP1_BASE + 4)
#define DM355_UART2_BASE		(0x01E06000)
#define DM355_ASYNC_EMIF_CNTRL_BASE	(0x01E10000)

#define DM355_MMC_SD_BASE		(0x01E11000)
#define DM355_MMC0_BASE 		DM355_MMC_SD_BASE
#define DAVINCI_MMC_SD0_BASE		DM355_MMC_SD_BASE

/*
 * DA8xx base registers
 */
#define DA8XX_TPCC_BASE 		0x01C00000
#define DA8XX_TPTC0_BASE		0x01C08000
#define DA8XX_TPTC1_BASE		0x01C08400
#define DA8XX_PSC0_BASE 		0x01C10000
#define DA8XX_PLL_CNTRL0_BASE		0x01C11000
#define DA8XX_KEY_MGR_BASE		0x01C12000
#define DA8XX_SECU_CNTRL_BASE		0x01C13000
#define DA8XX_BOOT_CFG_BASE		0x01C14000
#define DA8XX_IOPU0_BASE		0x01C16000
#define DA8XX_IOPU2_BASE		0x01C17000
#define DA8XX_TIMER64P0_BASE		0x01C20000
#define DA8XX_TIMER64P1_BASE		0x01C21000
#define DA8XX_WDOG_BASE 		DA8XX_TIMER64P1_BASE
#define DA8XX_I2C0_BASE 		0x01C22000
#define DA8XX_RTC_BASE			0x01C23000
#define DA8XX_IOPU1_BASE		0x01C24000
#define DA8XX_DMAX_DATA_RAM0_BASE	0x01C30000
#define DA8XX_DMAX_DATA_RAM1_BASE	0x01C32000
#define DA8XX_DMAX_INTC_BASE		0x01C34000
#define DA8XX_DPSP0_CNTRL_BASE		0x01C37000
#define DA8XX_DPSP0_DEBUG_BASE		0x01C37400
#define DA8XX_DPSP1_CNTRL_BASE		0x01C37800
#define DA8XX_DPSP1_DEBUG_BASE		0x01C37C00
#define DA8XX_DPSP0_INST_RAM_BASE	0x01C38000
#define DA8XX_DPSP1_INST_RAM_BASE	0x01C3C000
#define DA8XX_MMC_SD0_BASE		0x01C40000
#define DA8XX_SPI0_BASE 		0x01C41000
#define DA8XX_MPU0_BASE 		0x01C43000
#define DA8XX_MCASP0_CNTRL_BASE 	0x01D00000
#define DA8XX_MCASP0_FIFO_CNTRL_BASE	0x01D01000
#define DA8XX_MCASP0_DATAL_BASE 	0x01D02000
#define DA8XX_MCASP1_CNTRL_BASE 	0x01D04000
#define DA8XX_MCASP1_FIFO_CNTRL_BASE	0x01D05000
#define DA8XX_MCASP1_DATAL_BASE 	0x01D06000
#define DA8XX_MCASP2_CNTRL_BASE 	0x01D08000
#define DA8XX_MCASP2_FIFO_CNTRL_BASE	0x01D09000
#define DA8XX_MCASP2_DATAL_BASE 	0x01D0A000
#define DA8XX_IOPU4_BASE		0x01D0E000
#define DA8XX_USB0_CFG_BASE		0x01E00000
#define DA8XX_UHPI_CFG_BASE		0x01E10000
#define DA8XX_UHPI_IODFT_BASE		0x01E11000
#define DA8XX_SPI1_BASE 		0x01E12000
#define DA8XX_LCD_CNTRL_BASE		0x01E13000
#define DA8XX_MPU1_BASE 		0x01E14000
#define DA8XX_MPU2_BASE 		0x01E15000
#define DA8XX_EMAC_CPPI_PORT_BASE	0x01E20000
#define DA8XX_EMAC_CPGMACSS_BASE	0x01E22000
#define DA8XX_EMAC_CPGMAC_BASE		0x01E23000
#define DA8XX_EMAC_MDIO_BASE		0x01E24000
#define DA8XX_USB1_BASE 		0x01E25000
#define DA8XX_GPIO_BASE 		0x01E26000
#define DA8XX_PSC1_BASE 		0x01E27000
#define DA8XX_I2C1_BASE 		0x01E28000
#define DA8XX_IOPU3_BASE		0x01E29000
#define DA8XX_PBIST0_CNTRL_BASE 	0x01E2A000
#define DA8XX_PBIST1_CNTRL_BASE 	0x01E2B000
#define DA8XX_EPWM0_BASE		0x01F00000
#define DA8XX_HRPWM0_BASE		0x01F01000
#define DA8XX_EPWM1_BASE		0x01F02000
#define DA8XX_HRPWM1_BASE		0x01F03000
#define DA8XX_EPWM2_BASE		0x01F04000
#define DA8XX_HRPWM2_BASE		0x01F05000
#define DA8XX_ECAP0_BASE		0x01F06000
#define DA8XX_ECAP1_BASE		0x01F07000
#define DA8XX_ECAP2_BASE		0x01F08000
#define DA8XX_EQEP0_BASE		0x01F09000
#define DA8XX_EQEP1_BASE		0x01F0A000
#define DA8XX_IOPU5_BASE		0x01F0B000

#define DA8XX_ARM_LOC_ROM_BASE		0x80000000
#define DA8XX_ARM_LOC_ROM_SIZE		SZ_8K

#define DA8XX_ARM_INTC_BASE		0xFFFEE000
#define DA8XX_ARM_INTC_SIZE		SZ_4K

#define DA8XX_ARM_LOC_RAM_BASE		0xFFFF0000
#define DA8XX_ARM_LOC_RAM_SIZE		SZ_8K

/* EMIF area */
#define DA8XX_EMIF25_ASYNC_DATA_CE0_BASE	0x40000000
/* CS1/CE1 not used on DA8xx */
#define DA8XX_EMIF25_ASYNC_DATA_CE2_BASE	0x60000000
#define DA8XX_EMIF25_ASYNC_DATA_CE3_BASE	0x62000000
#define DA8XX_EMIF25_ASYNC_DATA_CE4_BASE	0x64000000
#define DA8XX_EMIF25_ASYNC_DATA_CE5_BASE	0x66000000
#define DA8XX_EMIF25_CONTROL_BASE		0x68000000

#define DA8XX_EMIF3_CONTROL_BASE		0xB0000000
#define DA8XX_EMIF3_DATA_BASE			0xC0000000

/*
 * DM365 base register address
 */
#define DM365_DMA_3PTC2_BASE		(0x01C10800)
#define DM365_DMA_3PTC3_BASE		(0x01C10C00)
#define DM365_TIMER3_BASE		(0x01C23800)
#define DM365_ADCIF_BASE		(0x01C23C00)
#define DM365_SPI3_BASE			(0x01C68000)
#define DM365_SPI4_BASE			(0x01C23000)
#define DM365_RTC_BASE			(0x01C69000)
#define DM365_KEYSCAN_BASE		(0x01C69400)
#define DM365_UHPI_BASE			(0x01C69800)
#define DM365_IMCOP_BASE		(0x01CA0000)
#define DM365_MMC_SD1_BASE		(0x01D00000)
#define DM365_MCBSP_BASE		(0x01D02000)
#define DM365_UART1_BASE		(0x01D06000)
#define DM365_EMAC_CNTRL_BASE		(0x01D07000)
#define DM365_EMAC_WRAP_RAM_BASE	(0x01D08000)
#define DM365_EMAC_WRAP_CNTRL_BASE	(0x01D0A000)
#define DM365_EMAC_MDIO_BASE		(0x01D0B000)
#define DM365_VOICE_CODEC_BASE		(0x01D0C000)
#define DM365_ASYNC_EMIF_CNTRL_BASE	(0x01D10000)
#define DM365_MMC_SD0_BASE		(0x01D11000)
#define DM365_MS_BASE			(0x01D20000)
#define DM365_KALEIDO_BASE		(0x01E00000)

#endif /* __ASM_ARCH_HARDWARE_H */
